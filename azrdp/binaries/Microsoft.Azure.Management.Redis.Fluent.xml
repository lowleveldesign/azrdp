<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.Redis.Fluent</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl">
             <summary>
             The RedisCache.keys action result.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzQWNjZXNzS2V5c0ltcGw=
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.SecondaryKey">
            GENMHASH:052932D87146B729CFA163215691D8ED:B906418BFAF9A0252DDBFB702ABE2774
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner)">
             <summary>
             Creates an instance of the Redis Access keys result object.
             </summary>
             <param name="inner">The inner object.</param>
            GENMHASH:C452582DCEC9B97DA6C301BBFC245AB7:BC4B1282CA708DC220050F834F17A184
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.PrimaryKey">
            GENMHASH:0B1F8FBCA0C4DFB5EA228CACB374C6C2:EF4A3D6252BFD28784D9F9BED7CEA1C0
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisAccessKeys#SecondaryKey">
            <summary>
            Gets a secondary key value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisAccessKeysImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisAccessKeys#PrimaryKey">
            <summary>
            Gets a primary key value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl">
             <summary>
             Implementation for Redis Cache and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzQ2FjaGVJbXBs
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.SubnetId">
            GENMHASH:A46525F44B70758E2EDBD761F1C43440:CDCB954FF16DBA73112F76E0FBD05F88
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithNonSslPort">
            GENMHASH:DA29E6CF75B7755D5158B0C9AAA9D5A0:A3EDD15A99413A6F39B0B8A0338713D9
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.HostName">
            GENMHASH:A50A011CA652E846C1780DCE98D171DE:1130E1FDC5A612FAE78D6B24DD71D43E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.DeletePatchSchedule">
            GENMHASH:3D7C4113A3F55E3E31A8AB77D2A98BC2:D096D794DD08C7A81CB4711B276ACAF0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            GENMHASH:E0A932BCE095834DF49296A5A1B250F3:9AB43882F1D20579E20CB41390D07940
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.StaticIP">
            GENMHASH:8939689DC27B99614145E6616DB6A0BF:60428C770DA47B41ED0FE8196801C941
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.GetKeysAsync(System.Threading.CancellationToken)">
            GENMHASH:6EE61FA0DE4D0297160B059C5B56D12A:FCE23512A2C31EB7F68F7065799142F4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithBasicSku">
            GENMHASH:8D7485C72B719CA5E190D69B6FF75F54:EF1EAF9D3B229FCBEC276D19464D4B8C
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithBasicSku(System.Int32)">
            GENMHASH:3A939C892B9542A7F3B2D43CFB7641C7:3D66186DDF06CB5C03B9666F446517A0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Update">
            GENMHASH:6BCE517E09457FF033728269C8936E64:735695BBFA17FB30B54763A64BD24DB2
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ImportDataAsync(System.Collections.Generic.IList{System.String},System.Threading.CancellationToken)">
            GENMHASH:7EA43FE4B5DC6873C3A15AE9AF9FD9A2:DB640B4FFC3846A52E12E749C7AE1E07
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ImportDataAsync(System.Collections.Generic.IList{System.String},System.String,System.Threading.CancellationToken)">
            GENMHASH:797BE61D54080982DA71A130D2628D30:F1FC7E1F9F01D79933EE309917AC42ED
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithShardCount(System.Int32)">
            GENMHASH:9456FDB06E5A3C49F9A7BFDDA1938013:A5E2F06B6C6C37916FED3F7329DBBE32
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ExportDataAsync(System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:E3A7804FB0FA9098FEB1BBC27C0AC302:7E617ED18080CC8A1CBB2EA724051876
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ExportDataAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:D36720446E1DFBFE86C7D6259BB131A7:DBFE731939CDFD6A00021D18D3050471
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ListPatchSchedules">
            GENMHASH:CC99BC6F0FDDE008E581A6EB944FE764:6082EF512339E71B6A18A70D5F982D8A
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RedisConfiguration">
            GENMHASH:83D353023D85D6E91BB9A3E8AC689039:DF02D821D2252D83CC2CDE0D9667F24E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.NonSslPort">
            GENMHASH:6D1D6050A5B64D726B268700D1D5B76A:B617C9AF570BA31ABDF18E43D8A277EA
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.AsPremium">
            GENMHASH:A4D7300B7F198955D626D528C3191C0D:7D05859155D538EA8AAA13A7171F55B2
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithStaticIP(System.String)">
            GENMHASH:1F68C56BDE6C18A1D69F2A7E56996F24:92A35BA32839860728FBFB7B8EF51BC5
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.UpdateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:507A92D4DCD93CE9595A78198DEBDFCF:C939BB939FCE92CA0B2A26D322003DEA
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Threading.CancellationToken)">
            GENMHASH:861E02F6BBA5773E9337D78B346B0D6B:1E017460FECC66E20EB360CE96692158
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.CreateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:0202A00A1DCF248D2647DBDBEF2CA865:292D01776A83815A20D32F10B590AFEE
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.UpdatePatchSchedules(System.Threading.CancellationToken)">
            GENMHASH:7EDCF977DFDBB33CAD61C0A35BD4E3F0:B85274740259A09ED8D26A65DDFFB972
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RefreshKeysAsync(System.Threading.CancellationToken)">
            GENMHASH:36C3CA891B448CCCA6D3BB4C29A31470:222A26931EAF5A1984B63F0B88A1D104
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.GetInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:4002186478A1CB0B59732EBFB18DEB3A:FEAA566B918E8D6129C37B2AD34F3689
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ProvisioningState">
            GENMHASH:99D5BF64EA8AA0E287C9B6F77AAD6FC4:220D4662AAC7DF3BEFAF2B253278E85C
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.SslPort">
            GENMHASH:8E06C1A19EE798AB8D863FD70174E162:EB25F0BF011FB476ED48A193129040E2
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutRedisConfiguration">
            GENMHASH:4F64337819291292917CAEDDE1BA957C:61DFF56DF837BA3A7526DB4C6FB3A760
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutRedisConfiguration(System.String)">
            GENMHASH:EE0340B2F8356DEF7F1B64D128A2B48C:D28521C5DD147C307414B1CB76E973D0
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.RedisVersion">
            GENMHASH:0DEA6EED7C42496EBE4A5F0A6169F305:DB027AD772BBD41451F9E589A68B87F8
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithoutNonSslPort">
            GENMHASH:09C8C6B57BAA375B863AFE579BB6807D:91AAC365E5F79518CF38951EBEE910D6
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Port">
            GENMHASH:BF1200B4E784F046AF04467F35BAC1C4:F0090A6ECB1B91C3BCFD966232A4C1D4
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ForceRebootAsync(System.String,System.Threading.CancellationToken)">
            GENMHASH:00B3FC5713723EC459E8D0BBE862C56F:C9FD7CE2B1D3311D7590A05CB6863CEE
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ForceRebootAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            GENMHASH:9514189731558B5E71CF90933A631027:341BAF022C60AC1258474CDECEA5B296
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPremiumSku">
            GENMHASH:30CB47385D9AC0E9818336B698BEF529:4EF4FC902E838999361E1A71DDDF1772
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPremiumSku(System.Int32)">
            GENMHASH:5237FB6E7BCD5E52462CBB82E15EE73E:BB67358C305B16CB80D9D59DEDDC11E9
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.IsPremium">
            GENMHASH:1593AB443F94D260A2681DBAC7A504E4:D07F31B79AEB480685C5B24199EEE067
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.ShardCount">
            GENMHASH:246CCD739A2C2D6763D6C1A7A4C3F1B3:FCB76FD3E14B5306E0C0D9C582A496EF
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithStandardSku">
            GENMHASH:D24D0D518EC4AAB3671622B0122F4207:2884FF302CBD610FA22D475BDC8EBC01
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithStandardSku(System.Int32)">
            GENMHASH:85220C2FDADE8DCD78F313C8C1D645BE:B3B4FEA837D2E04D13A5DAE50007103A
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.#ctor(System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner,Microsoft.Azure.Management.Redis.Fluent.IRedisManager)">
            GENMHASH:1CA727C3FD99D6E28A9659CD7F1CF091:4E78F5B0D0A013537A5A89F07D0A88AD
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            GENMHASH:F7A196D3735B12867C5D8141F3638249:ACD54F2F69ECDD6A123AB39BF9034EB6
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithRedisConfiguration(System.String,System.String)">
            GENMHASH:BEAAB097144934E76ACF615386D481B3:4375CEA991BF92F46A862A930235B943
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            GENMHASH:C2110F8F251298226638BAFE08EB2503:90FDAC2D7F671EE3AF491F69172F0D7E
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})">
            GENMHASH:2B41019E00D6558C5F5C529D3296C590:5848DBA8C0AAE4C5977BD3956E8379ED
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            GENMHASH:4DC611DFE1B12D88B1FBC380172484A4:A5D82382EEDA234E079CD77064B53310
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            GENMHASH:C11AE4C223D196AB7A57470F94A0CDC6:3497B4EAD6A09E77BB7E7007D1973D9A
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithStaticIP(System.String)">
            <summary>
            Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.
            </summary>
            <param name="staticIP">The static IP value to set.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="network">Instance of Network object.</param>
            <param name="subnetName">The name of the subnet.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithCreate#WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithStaticIP(System.String)">
            <summary>
            Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.
            </summary>
            <param name="staticIP">The staticIP value to set.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate#WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="networkResource">Instance of Network object.</param>
            <param name="subnetName">The name of the subnet.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreate#WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreate#WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithPremiumSkuCreate#WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#GetKeys">
            <return>A Redis Cache's access keys. This operation requires write permission to the Cache resource.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#HostName">
            <summary>
            Gets the hostName value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RedisConfiguration">
            <summary>
            Gets the Redis configuration value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RegenerateKey(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType)">
            <summary>
            Regenerates the access keys for this Redis Cache.
            </summary>
            <param name="keyType">Key type to regenerate.</param>
            <return>The generated access keys for this Redis Cache.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#ShardCount">
            <summary>
            Gets the shardCount value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#NonSslPort">
            <summary>
            Gets true if non SSL port is enabled, false otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#IsPremium">
            <summary>
            Gets returns true if current Redis Cache instance has Premium Sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#ProvisioningState">
            <summary>
            Gets the provisioningState value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#Keys">
            <summary>
            Gets a Redis Cache's access keys. This operation requires write permission to the Cache resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#Sku">
            <summary>
            Gets the sku value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#StaticIP">
            <summary>
            Gets the staticIP value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#SslPort">
            <summary>
            Gets the sslPort value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RefreshKeys">
            <summary>
            Fetch the up-to-date access keys from Azure for this Redis Cache.
            </summary>
            <return>The access keys for this Redis Cache.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#Port">
            <summary>
            Gets the port value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#RedisVersion">
            <summary>
            Gets the Redis version value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#SubnetId">
            <summary>
            Gets the subnetId value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCache#AsPremium">
            <return>Exposes features available only to Premium Sku Redis Cache instances.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithNonSslPort#WithoutNonSslPort">
            <summary>
            Disables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithNonSslPort#WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ResourceActions#IUpdatable{Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IUpdate}#Update">
            <summary>
            Begins an update for a new resource.
            This is the beginning of the builder pattern used to update top level resources
            in Azure. The final method completing the definition and starting the actual resource creation
            process in Azure is  Appliable.apply().
            </summary>
            <return>The stage of new resource update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithoutRedisConfiguration">
            <summary>
            Cleans all the configuration settings being set on Redis Cache.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithoutRedisConfiguration(System.String)">
            <summary>
            Removes specified Redis Cache configuration setting.
            </summary>
            <param name="key">Redis configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithRedisConfiguration#WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithBasicSku(System.Int32)">
            <summary>
            Updates Redis Cache to Basic sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithStandardSku">
            <summary>
            Updates Redis Cache to Standard sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithStandardSku(System.Int32)">
            <summary>
            Updates Redis Cache to Standard sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithPremiumSku">
            <summary>
            Updates Redis Cache to Premium sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Update#IWithSku#WithPremiumSku(System.Int32)">
            <summary>
            Updates Redis Cache to Premium sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Premium sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithBasicSku">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithBasicSku(System.Int32)">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithStandardSku">
            <summary>
            Specifies the Standard Sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithStandardSku(System.Int32)">
            <summary>
            Specifies the Standard sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithPremiumSku">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IWithSku#WithPremiumSku(System.Int32)">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ExportData(System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ExportData(System.String,System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ImportData(System.Collections.Generic.IList{System.String})">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ImportData(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#DeletePatchSchedule">
            <summary>
            Deletes the patching schedule for Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ListPatchSchedules">
            <summary>
            Gets the patching schedule for Redis Cache.
            </summary>
            <return>List of patch schedules for current Redis Cache.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ForceReboot(System.String)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCacheImpl.Microsoft#Azure#Management#Redis#Fluent#IRedisCachePremium#ForceReboot(System.String,System.Int32)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
            <param name="shardId">In case of cluster cache, this specifies shard id which should be rebooted.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl">
             <summary>
             The implementation of RedisCaches and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LnJlZGlzLmltcGxlbWVudGF0aW9uLlJlZGlzQ2FjaGVzSW1wbA==
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.DeleteInnerByGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:0679DF8CA692D1AC80FC21655835E678:B9B028D620AC932FDF66D2783E476B0D
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.#ctor(Microsoft.Azure.Management.Redis.Fluent.IRedisManager)">
            GENMHASH:C2F15BEB23386D8534B400C08B468649:2DA21496DE2BD6513C1C418114ACEF97
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.Define(System.String)">
            GENMHASH:8ACFB0E23F5F24AD384313679B65F404:AD7C28D26EC1F237B93E54AD31899691
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.GetInnerByGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:AB63F782DA5B8D22523A284DAD664D17:7C0A1D0C3FE28C45F35B565F4AFF751D
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.ListInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:7D6013E8B95E991005ED921F493EFCE4:6FB4EA69673E1D8A74E1418EB52BB9FE
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.ListInnerByGroupAsync(System.String,System.Threading.CancellationToken)">
            GENMHASH:95834C6C7DA388E666B705A62A7D02BF:BDFF4CB61E8A8D975417EA5FC914921A
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.WrapModel(System.String)">
            GENMHASH:2FE8C4C2D5EAD7E37787838DE0B47D92:4A5A2A1EDBB98E8843A388EEBC9C31D6
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.WrapModel(Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner)">
            GENMHASH:CBAFA6E0018A4E2E5B9C07BDC6094FEA:D49E5AF1C51CD53AE44C02A61286734D
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCachesImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsCreating{Microsoft#Azure#Management#Redis#Fluent#RedisCache#Definition#IBlank}#Define(System.String)">
            <summary>
            Begins a definition for a new resource.
            This is the beginning of the builder pattern used to create top level resources
            in Azure. The final method completing the definition and starting the actual resource creation
            process in Azure is  Creatable.create().
            Note that the  Creatable.create() method is
            only available at the stage of the resource definition that has the minimum set of input
            parameters specified. If you do not see  Creatable.create() among the available methods, it
            means you have not yet specified all the required input settings. Input settings generally begin
            with the word "with", for example: <code>.withNewResourceGroup()</code> and return the next stage
            of the resource definition, as an interface in the "fluent interface" style.
            </summary>
            <param name="name">The name of the new resource.</param>
            <return>The first stage of the new resource definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManager.Configure">
            <summary>
            Returns a Configurable instance that can be used to create RedisManager with optional configuration.
            </summary>
            <returns>The instance allowing configurations</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisManager">
            <summary>
            Entry point to Azure Redis Cache management.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManager.RedisCaches">
            <summary>
            Gets the Redis Cache management API entry point.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry">
            <summary>
            Patch schedule entry for a Premium Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner)">
            <summary>
            Initializes a new instance of the ScheduleEntry class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.DayOfWeek">
            <summary>
            Gets or sets day of the week when a cache can be patched. Possible
            values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
            'Friday', 'Saturday', 'Sunday', 'Everyday', 'Weekend'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.StartHourUtc">
            <summary>
            Gets or sets start hour after which cache patching can start.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry.MaintenanceWindow">
            <summary>
            Gets or sets ISO8601 timespan specifying how much time cache
            patching can take.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek">
            <summary>
            Defines values for DayOfWeek.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner">
            <summary>
            Parameters for Redis export operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.#ctor">
            <summary>
            Initializes a new instance of the ExportRDBParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ExportRDBParametersInner class.
            </summary>
            <param name="prefix">Prefix to use for exported files.</param>
            <param name="container">Container name to export to.</param>
            <param name="format">File format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Format">
            <summary>
            Gets or sets file format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Prefix">
            <summary>
            Gets or sets prefix to use for exported files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Container">
            <summary>
            Gets or sets container name to export to.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner">
            <summary>
            Parameters for Redis import operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.#ctor">
            <summary>
            Initializes a new instance of the ImportRDBParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the ImportRDBParametersInner class.
            </summary>
            <param name="files">files to import.</param>
            <param name="format">File format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.Format">
            <summary>
            Gets or sets file format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.Files">
            <summary>
            Gets or sets files to import.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RebootType">
            <summary>
            Defines values for RebootType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner">
            <summary>
            Redis cache access keys.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.#ctor">
            <summary>
            Initializes a new instance of the RedisAccessKeysInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisAccessKeysInner class.
            </summary>
            <param name="primaryKey">The current primary key that clients can
            use to authenticate with Redis cache.</param>
            <param name="secondaryKey">The current secondary key that clients
            can use to authenticate with Redis cache.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.PrimaryKey">
            <summary>
            Gets the current primary key that clients can use to authenticate
            with Redis cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner.SecondaryKey">
            <summary>
            Gets the current secondary key that clients can use to authenticate
            with Redis cache.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner">
            <summary>
            Parameters supplied to the Create Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the RedisCreateParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.Sku,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisCreateParametersInner class.
            </summary>
            <param name="sku">The SKU of the Redis cache to deploy.</param>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">Specifies whether the non-ssl Redis
            server port (6379) is enabled.</param>
            <param name="tenantSettings">tenantSettings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Static IP address. Required when deploying a
            Redis cache inside an existing Azure Virtual Network.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.EnableNonSslPort">
            <summary>
            Gets or sets specifies whether the non-ssl Redis server port (6379)
            is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.TenantSettings">
            <summary>
            Gets or sets tenantSettings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.StaticIP">
            <summary>
            Gets or sets static IP address. Required when deploying a Redis
            cache inside an existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.Sku">
            <summary>
            Gets or sets the SKU of the Redis cache to deploy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner">
            <summary>
            Response to force reboot for Redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner.#ctor">
            <summary>
            Initializes a new instance of the RedisForceRebootResponseInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RedisForceRebootResponseInner
            class.
            </summary>
            <param name="message">Status message</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisForceRebootResponseInner.Message">
            <summary>
            Gets status message
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType">
            <summary>
            Defines values for RedisKeyType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner">
            <summary>
            Response to put/get patch schedules for Redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.#ctor">
            <summary>
            Initializes a new instance of the RedisPatchScheduleInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the RedisPatchScheduleInner class.
            </summary>
            <param name="scheduleEntriesProperty">List of patch schedules for a
            Redis cache.</param>
            <param name="id">Resource ID.</param>
            <param name="name">Resource name.</param>
            <param name="type">Resource type.</param>
            <param name="location">Resource location.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.Id">
            <summary>
            Gets resource ID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.Name">
            <summary>
            Gets resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.Type">
            <summary>
            Gets resource type.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.Location">
            <summary>
            Gets resource location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.ScheduleEntriesProperty">
            <summary>
            Gets or sets list of patch schedules for a Redis cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisPatchScheduleInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner">
            <summary>
            Specifies which Redis node(s) to reboot.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.#ctor">
            <summary>
            Initializes a new instance of the RedisRebootParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the RedisRebootParametersInner class.
            </summary>
            <param name="rebootType">Which Redis node(s) to reboot. Depending
            on this value data loss is possible. Possible values include:
            'PrimaryNode', 'SecondaryNode', 'AllNodes'</param>
            <param name="shardId">If clustering is enabled, the ID of the shard
            to be rebooted.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.RebootType">
            <summary>
            Gets or sets which Redis node(s) to reboot. Depending on this value
            data loss is possible. Possible values include: 'PrimaryNode',
            'SecondaryNode', 'AllNodes'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.ShardId">
            <summary>
            Gets or sets if clustering is enabled, the ID of the shard to be
            rebooted.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters">
            <summary>
            Specifies which Redis access keys to reset.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.#ctor">
            <summary>
            Initializes a new instance of the RedisRegenerateKeyParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType)">
            <summary>
            Initializes a new instance of the RedisRegenerateKeyParameters
            class.
            </summary>
            <param name="keyType">The Redis access key to regenerate. Possible
            values include: 'Primary', 'Secondary'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.KeyType">
            <summary>
            Gets or sets the Redis access key to regenerate. Possible values
            include: 'Primary', 'Secondary'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisRegenerateKeyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner">
            <summary>
            A single Redis item in List or Get Operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.#ctor">
            <summary>
            Initializes a new instance of the RedisResourceInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.Sku,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Redis.Fluent.Models.RedisAccessKeysInner)">
            <summary>
            Initializes a new instance of the RedisResourceInner class.
            </summary>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">Specifies whether the non-ssl Redis
            server port (6379) is enabled.</param>
            <param name="tenantSettings">tenantSettings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Static IP address. Required when deploying a
            Redis cache inside an existing Azure Virtual Network.</param>
            <param name="sku">The SKU of the Redis cache to deploy.</param>
            <param name="redisVersion">Redis version.</param>
            <param name="provisioningState">Redis instance provisioning
            status.</param>
            <param name="hostName">Redis host name.</param>
            <param name="port">Redis non-SSL port.</param>
            <param name="sslPort">Redis SSL port.</param>
            <param name="accessKeys">The keys of the Redis cache - not set if
            this object is not the response to Create or Update redis
            cache</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.EnableNonSslPort">
            <summary>
            Gets or sets specifies whether the non-ssl Redis server port (6379)
            is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.TenantSettings">
            <summary>
            Gets or sets tenantSettings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.StaticIP">
            <summary>
            Gets or sets static IP address. Required when deploying a Redis
            cache inside an existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.Sku">
            <summary>
            Gets or sets the SKU of the Redis cache to deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.RedisVersion">
            <summary>
            Gets redis version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.ProvisioningState">
            <summary>
            Gets redis instance provisioning status.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.HostName">
            <summary>
            Gets redis host name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.Port">
            <summary>
            Gets redis non-SSL port.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.SslPort">
            <summary>
            Gets redis SSL port.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.AccessKeys">
            <summary>
            Gets the keys of the Redis cache - not set if this object is not
            the response to Create or Update redis cache
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisResourceInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner">
            <summary>
            Parameters supplied to the Update Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the RedisUpdateParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the RedisUpdateParametersInner class.
            </summary>
            <param name="redisConfiguration">All Redis Settings. Few possible
            keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.</param>
            <param name="enableNonSslPort">Specifies whether the non-ssl Redis
            server port (6379) is enabled.</param>
            <param name="tenantSettings">tenantSettings</param>
            <param name="shardCount">The number of shards to be created on a
            Premium Cluster Cache.</param>
            <param name="subnetId">The full resource ID of a subnet in a
            virtual network to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1</param>
            <param name="staticIP">Static IP address. Required when deploying a
            Redis cache inside an existing Azure Virtual Network.</param>
            <param name="sku">The SKU of the Redis cache to deploy.</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.RedisConfiguration">
            <summary>
            Gets or sets all Redis Settings. Few possible keys:
            rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value
            etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.EnableNonSslPort">
            <summary>
            Gets or sets specifies whether the non-ssl Redis server port (6379)
            is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.TenantSettings">
            <summary>
            Gets or sets tenantSettings
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.ShardCount">
            <summary>
            Gets or sets the number of shards to be created on a Premium
            Cluster Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.SubnetId">
            <summary>
            Gets or sets the full resource ID of a subnet in a virtual network
            to deploy the Redis cache in. Example format:
            /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.StaticIP">
            <summary>
            Gets or sets static IP address. Required when deploying a Redis
            cache inside an existing Azure Virtual Network.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.Sku">
            <summary>
            Gets or sets the SKU of the Redis cache to deploy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner">
            <summary>
            Patch schedule entry for a Premium Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.#ctor">
            <summary>
            Initializes a new instance of the ScheduleEntryInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.#ctor(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the ScheduleEntryInner class.
            </summary>
            <param name="dayOfWeek">Day of the week when a cache can be
            patched. Possible values include: 'Monday', 'Tuesday', 'Wednesday',
            'Thursday', 'Friday', 'Saturday', 'Sunday', 'Everyday',
            'Weekend'</param>
            <param name="startHourUtc">Start hour after which cache patching
            can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how
            much time cache patching can take. </param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.DayOfWeek">
            <summary>
            Gets or sets day of the week when a cache can be patched. Possible
            values include: 'Monday', 'Tuesday', 'Wednesday', 'Thursday',
            'Friday', 'Saturday', 'Sunday', 'Everyday', 'Weekend'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.StartHourUtc">
            <summary>
            Gets or sets start hour after which cache patching can start.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.MaintenanceWindow">
            <summary>
            Gets or sets ISO8601 timespan specifying how much time cache
            patching can take.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.Sku">
            <summary>
            SKU parameters supplied to the create Redis operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.#ctor">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
            <param name="name">The type of Redis cache to deploy. Valid values:
            (Basic, Standard, Premium). Possible values include: 'Basic',
            'Standard', 'Premium'</param>
            <param name="family">The SKU family to use. Valid values: (C, P).
            (C = Basic/Standard, P = Premium). Possible values include: 'C',
            'P'</param>
            <param name="capacity">The size of the Redis cache to deploy. Valid
            values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P
            (Premium) family (1, 2, 3, 4).</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Name">
            <summary>
            Gets or sets the type of Redis cache to deploy. Valid values:
            (Basic, Standard, Premium). Possible values include: 'Basic',
            'Standard', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Family">
            <summary>
            Gets or sets the SKU family to use. Valid values: (C, P). (C =
            Basic/Standard, P = Premium). Possible values include: 'C', 'P'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Capacity">
            <summary>
            Gets or sets the size of the Redis cache to deploy. Valid values:
            for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P
            (Premium) family (1, 2, 3, 4).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.Models.Sku.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.SkuFamily">
            <summary>
            Defines values for SkuFamily.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.Models.SkuName">
            <summary>
            Defines values for SkuName.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisAccessKeys">
            <summary>
            The <code>RedisCache.keys()</code> action result.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisAccessKeys.SecondaryKey">
            <summary>
            Gets a secondary key value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisAccessKeys.PrimaryKey">
            <summary>
            Gets a primary key value.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCache">
            <summary>
            An immutable client-side representation of an Azure Redis Cache.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.SubnetId">
            <summary>
            Gets the subnetId value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.HostName">
            <summary>
            Gets the hostName value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RefreshKeys">
            <summary>
            Fetch the up-to-date access keys from Azure for this Redis Cache.
            </summary>
            <return>The access keys for this Redis Cache.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.StaticIP">
            <summary>
            Gets the staticIP value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.Keys">
            <summary>
            Gets a Redis Cache's access keys. This operation requires write permission to the Cache resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.ProvisioningState">
            <summary>
            Gets the provisioningState value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.GetKeys">
            <return>A Redis Cache's access keys. This operation requires write permission to the Cache resource.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.SslPort">
            <summary>
            Gets the sslPort value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RedisVersion">
            <summary>
            Gets the Redis version value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RedisConfiguration">
            <summary>
            Gets the Redis configuration value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.Port">
            <summary>
            Gets the port value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.NonSslPort">
            <summary>
            Gets true if non SSL port is enabled, false otherwise.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.AsPremium">
            <return>Exposes features available only to Premium Sku Redis Cache instances.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.IsPremium">
            <summary>
            Gets returns true if current Redis Cache instance has Premium Sku.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.Sku">
            <summary>
            Gets the sku value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.ShardCount">
            <summary>
            Gets the shardCount value.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCache.RegenerateKey(Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType)">
            <summary>
            Regenerates the access keys for this Redis Cache.
            </summary>
            <param name="keyType">Key type to regenerate.</param>
            <return>The generated access keys for this Redis Cache.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium">
            <summary>
            An immutable client-side representation of an Azure Redis cache with Premium SKU.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ListPatchSchedules">
            <summary>
            Gets the patching schedule for Redis Cache.
            </summary>
            <return>List of patch schedules for current Redis Cache.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.DeletePatchSchedule">
            <summary>
            Deletes the patching schedule for Redis Cache.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ForceReboot(System.String,System.Int32)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
            <param name="shardId">In case of cluster cache, this specifies shard id which should be rebooted.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ForceReboot(System.String)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.
            </summary>
            <param name="rebootType">
            Specifies which Redis node(s) to reboot. Depending on this value data loss is
            possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ImportData(System.Collections.Generic.IList{System.String})">
            <summary>
            Import data into Redis Cache.
            </summary>
            <param name="files">Files to import.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ExportData(System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisCachePremium.ExportData(System.String,System.String,System.String)">
            <summary>
            Export data from Redis Cache.
            </summary>
            <param name="containerSASUrl">Container name to export to.</param>
            <param name="prefix">Prefix to use for exported files.</param>
            <param name="fileFormat">Specifies file format.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisCaches">
            <summary>
            Entry point for Redis Cache management API.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate">
            <summary>
            A Redis Cache definition with sufficient inputs to create a new
            Redis Cache in the cloud, but exposing additional optional inputs to
            specify.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="network">Instance of Network object.</param>
            <param name="subnetName">The name of the subnet.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithStaticIP(System.String)">
            <summary>
            Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.
            </summary>
            <param name="staticIP">The static IP value to set.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithCreate.WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IBlank">
            <summary>
            The first stage of the Redis Cache definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku">
            <summary>
            A Redis Cache definition allowing the sku to be set.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithPremiumSku">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithPremiumSku(System.Int32)">
            <summary>
            Specifies the Premium sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithBasicSku">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithBasicSku(System.Int32)">
            <summary>
            Specifies the Basic sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithStandardSku">
            <summary>
            Specifies the Standard Sku of the Redis Cache.
            </summary>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithSku.WithStandardSku(System.Int32)">
            <summary>
            Specifies the Standard sku of the Redis Cache.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to deploy for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithGroup">
            <summary>
            A Redis Cache definition allowing resource group to be set.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate">
            <summary>
            A Redis Cache definition with Premium Sku specific functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate.WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IWithPremiumSkuCreate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Definition.IDefinition">
            <summary>
            Container interface for all the definitions that need to be implemented.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration">
            <summary>
            A Redis Cache update allowing Redis configuration to be modified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration">
            <summary>
            Cleans all the configuration settings being set on Redis Cache.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithoutRedisConfiguration(System.String)">
            <summary>
            Removes specified Redis Cache configuration setting.
            </summary>
            <param name="key">Redis configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            All Redis Settings. Few possible keys:
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="redisConfiguration">Configuration of Redis Cache as a map indexed by configuration name.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithRedisConfiguration.WithRedisConfiguration(System.String,System.String)">
            <summary>
            Specifies Redis Setting.
            rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy,
            notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries,
            list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries,
            zset-max-ziplist-entries, zset-max-ziplist-value etc.
            </summary>
            <param name="key">Redis configuration name.</param>
            <param name="value">Redis configuration value.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate">
            <summary>
            The template for a Redis Cache update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithSubnet(Microsoft.Azure.Management.ResourceManager.Fluent.Core.IHasId,System.String)">
            <summary>
            Assigns the specified subnet to this instance of Redis Cache.
            </summary>
            <param name="networkResource">Instance of Network object.</param>
            <param name="subnetName">The name of the subnet.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithStaticIP(System.String)">
            <summary>
            Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing Azure Virtual Network.
            </summary>
            <param name="staticIP">The staticIP value to set.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithShardCount(System.Int32)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="shardCount">The shard count value to set.</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.DayOfWeek,System.Int32,System.TimeSpan)">
            <summary>
            The number of shards to be created on a Premium Cluster Cache.
            </summary>
            <param name="dayOfWeek">Day of week when cache can be patched.</param>
            <param name="startHourUtc">Start hour after which cache patching can start.</param>
            <param name="maintenanceWindow">ISO8601 timespan specifying how much time cache patching can take.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry)">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">Patch schedule entry for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IUpdate.WithPatchSchedule(System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntry})">
            <summary>
            Patch schedule on a Premium Cluster Cache.
            </summary>
            <param name="scheduleEntry">List of patch schedule entries for Premium Redis Cache.</param>
            <return>The next stage of Redis Cache with Premium SKU definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithNonSslPort">
            <summary>
            A Redis Cache update allowing non SSL port to be enabled or disabled.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithNonSslPort.WithNonSslPort">
            <summary>
            Enables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithNonSslPort.WithoutNonSslPort">
            <summary>
            Disables non-ssl Redis server port (6379).
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku">
            <summary>
            A Redis Cache update stage allowing to change the parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithPremiumSku">
            <summary>
            Updates Redis Cache to Premium sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithPremiumSku(System.Int32)">
            <summary>
            Updates Redis Cache to Premium sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Premium sku with P family (1, 2, 3, 4).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithBasicSku(System.Int32)">
            <summary>
            Updates Redis Cache to Basic sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Basic sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithStandardSku">
            <summary>
            Updates Redis Cache to Standard sku.
            </summary>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisCache.Update.IWithSku.WithStandardSku(System.Int32)">
            <summary>
            Updates Redis Cache to Standard sku with new capacity.
            </summary>
            <param name="capacity">Specifies what size of Redis Cache to update to for Standard sku with C family (0, 1, 2, 3, 4, 5, 6).</param>
            <return>The next stage of Redis Cache update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations">
            <summary>
            PatchSchedulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for Redis cache (requires
            Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='scheduleEntriesProperty'>
            List of patch schedules for a Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule of a redis cache (requires Premium
            SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient">
            <summary>
            REST API for Azure Redis Cache Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify the Microsoft
            Azure subscription. The subscription ID forms part of the URI for
            every service call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.Redis">
            <summary>
            Gets the IRedisOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.IRedisManagementClient.PatchSchedules">
            <summary>
            Gets the IPatchSchedulesOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations">
            <summary>
            RedisOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Redis cache (resource description).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='keyType'>
            The Redis access key to regenerate. Possible values include:
            'Primary', 'Secondary'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reboot specified Redis node(s). This operation requires write
            permission to the cache resource. There can be potential data loss.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Specifies which Redis node(s) to reboot.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an
            existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.IRedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations">
            <summary>
            PatchSchedulesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient)">
            <summary>
            Initializes a new instance of the PatchSchedulesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for Redis cache (requires Premium
            SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='scheduleEntriesProperty'>
            List of patch schedules for a Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions">
            <summary>
            Extension methods for PatchSchedulesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner})">
            <summary>
            Create or replace the patching schedule for Redis cache (requires Premium
            SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='scheduleEntriesProperty'>
            List of patch schedules for a Redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Redis.Fluent.Models.ScheduleEntryInner},System.Threading.CancellationToken)">
            <summary>
            Create or replace the patching schedule for Redis cache (requires Premium
            SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='scheduleEntriesProperty'>
            List of patch schedules for a Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String)">
            <summary>
            Deletes the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.Get(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String)">
            <summary>
            Gets the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.PatchSchedulesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.Fluent.IPatchSchedulesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the patching schedule of a redis cache (requires Premium SKU).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient">
            <summary>
            REST API for Azure Redis Cache Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.SubscriptionId">
            <summary>
            Gets subscription credentials which uniquely identify the Microsoft Azure
            subscription. The subscription ID forms part of the URI for every service
            call.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.ApiVersion">
            <summary>
            Client Api Version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.Redis">
            <summary>
            Gets the IRedisOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.PatchSchedules">
            <summary>
            Gets the IPatchSchedulesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the RedisManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisOperations">
            <summary>
            RedisOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.#ctor(Microsoft.Azure.Management.Redis.Fluent.RedisManagementClient)">
            <summary>
            Initializes a new instance of the RedisOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.Client">
            <summary>
            Gets a reference to the RedisManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update Redis operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a Redis cache (resource description).
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Retrieve a Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='keyType'>
            The Redis access key to regenerate. Possible values include: 'Primary',
            'Secondary'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ForceRebootWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to
            the cache resource. There can be potential data loss.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Specifies which Redis node(s) to reboot.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginImportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.BeginExportDataWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions">
            <summary>
            Extension methods for RedisOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.Create(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.Update(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner)">
            <summary>
            Update an existing Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update Redis operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisUpdateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Update an existing Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Update Redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.Delete(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.Get(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String)">
            <summary>
            Gets a Redis cache (resource description).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.GetAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a Redis cache (resource description).
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.List(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListKeys(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String)">
            <summary>
            Retrieve a Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve a Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType)">
            <summary>
            Regenerate Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='keyType'>
            The Redis access key to regenerate. Possible values include: 'Primary',
            'Secondary'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisKeyType,System.Threading.CancellationToken)">
            <summary>
            Regenerate Redis cache's access keys. This operation requires write
            permission to the cache resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='keyType'>
            The Redis access key to regenerate. Possible values include: 'Primary',
            'Secondary'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ForceReboot(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to
            the cache resource. There can be potential data loss.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Specifies which Redis node(s) to reboot.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ForceRebootAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisRebootParametersInner,System.Threading.CancellationToken)">
            <summary>
            Reboot specified Redis node(s). This operation requires write permission to
            the cache resource. There can be potential data loss.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Specifies which Redis node(s) to reboot.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ImportData(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ImportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ExportData(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ExportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.RedisCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Create or replace (overwrite/recreate, with potential downtime) an existing
            Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters supplied to the Create Redis operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginDelete(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginImportData(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginImportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ImportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Import data into Redis cache.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis import operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginExportData(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.BeginExportDataAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.String,Microsoft.Azure.Management.Redis.Fluent.Models.ExportRDBParametersInner,System.Threading.CancellationToken)">
            <summary>
            Export data from the redis cache to blobs in a container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group.
            </param>
            <param name='name'>
            The name of the Redis cache.
            </param>
            <param name='parameters'>
            Parameters for Redis export operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all Redis caches in a resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListNext(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Redis.Fluent.RedisOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Redis.Fluent.IRedisOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets all Redis caches in the specified subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
